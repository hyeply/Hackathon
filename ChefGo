import tkinter as tk
from tkinter import scrolledtext

class RecipeGUI:
    def __init__(self, master):
        self.master = master
        master.title("ChefGo - Your Personal Recipe Assistant")

        # Styling
        self.master.configure(bg="#FFF8E1")
        #Label
        self.label_color = "#FFD1DC"
        self.entry_bg = "#FFFACD"
        self.button_color = "#FFD1DC"
        self.output_bg = "#FFD1DC"
        self.output_text_color = "#000000"

        # Components
        self.label = tk.Label(master, text="Enter the ingredients you have(If multiple use a comma):", bg=self.label_color, fg="black", font=("Arial", 12, "bold"))
        self.label.pack(pady=10)

        self.entry = tk.Entry(master, bg=self.entry_bg, font=("Arial", 8))
        self.entry.pack(ipady=3)

        self.button = tk.Button(master, text="Search Recipes", command=self.search_recipes, bg=self.button_color, fg="black", font=("Arial", 10, "bold"), relief=tk.FLAT)
        self.button.pack(pady=5)

        self.output_text = scrolledtext.ScrolledText(master, width=60, height=20, bg=self.output_bg, fg=self.output_text_color, font=("Arial", 10))
        self.output_text.pack(padx=10, pady=10)

        self.app = RecipeApp()

    def search_recipes(self):
        user_input = self.entry.get().lower()
        self.get_recipes_based_on_ingredients(user_input)

    def get_recipes_based_on_ingredients(self, user_input):
        suggested_recipes = []

        # List of recipes corresponding to ingredients
        if "spaghetti" in user_input:
            suggested_recipes.append("Spaghetti Carbonara")
        if "tomato" in user_input or "tomatoes" in user_input:
            suggested_recipes.append("Lentil Bolognese")
            suggested_recipes.append("Heirloom Tomato Salad")
        if "egg" in user_input or "eggs" in user_input:
            suggested_recipes.append("Spaghetti Carbonara")
            suggested_recipes.append("Egg and Kimchi Rice Bowls")
            suggested_recipes.append("Deviled Eggs")
        if "broccoli" in user_input:
            suggested_recipes.append("Chicken Stirfry")
            suggested_recipes.append("White Bean and Broccoli Salad")
        if "kale" in user_input:
            suggested_recipes.append("Roasted Kale and Mushroom")
        if "tofu" in user_input:
            suggested_recipes.append("Air Fryer Chili-Garlic Tofu with Green Beans")

                                     

        self.display_recipes(suggested_recipes)

    def display_recipes(self, suggested_recipes):
        self.output_text.delete(1.0, tk.END)
        if suggested_recipes:
            for recipe in suggested_recipes:
                self.output_text.insert(tk.END, f"{recipe}\n")
        else:
            self.output_text.insert(tk.END, "No recipes found with the available ingredients.")

class RecipeApp:
    def __init__(self):
        self.recipes = []

        self.add_default_recipes()

    def add_recipe(self, name, ingredients, instructions):
        recipe = Recipe(name, ingredients, instructions)
        self.recipes.append(recipe)

    def add_default_recipes(self):
        # Add your recipes here
        pass

def main():
    root = tk.Tk()
    app = RecipeGUI(root)
    root.mainloop()

if __name__ == "__main__":
    main()


